apiVersion: apps/v1
kind: Deployment
metadata:
  name: servers
spec:
  selector:
    matchLabels:
      app: servers
  template:
    metadata:
      labels:
        app: servers
    spec:
      imagePullSecrets:
        - name: docker-registry
      serviceAccountName: servers
      containers:
        - name: servers
          image: communicator
          resources:
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          ports:
            - name: container-port
              containerPort: 4000
          env:
            - name: PORT
              value: "4000"
            - name: ENV
              value: dev
            #mongo
            - name: MONGODB_HOST
              value: mongodb
            - name: MONGODB_ACCESS_PORT
              value: "27017"
            - name: MONGODB_USER
              value: root
            - name: MONGODB_DATABASE
              value: servers
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongodb-root-password
            # rabbitmq
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_ACCESS_PORT
              value: "5672"
            - name: RABBITMQ_USER
              value: user
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            # aws
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws-secret-access-key
            - name: AWS_S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws-s3-bucket-name

          livenessProbe:
            httpGet:
              path: /healthz
              port: container-port

          readinessProbe:
            tcpSocket:
              port: container-port
            initialDelaySeconds: 10
            periodSeconds: 10
